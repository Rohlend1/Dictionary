{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cokol\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\js\\\\slovar\\\\src\\\\components\\\\DictEdit\\\\DictEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './DictEdit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DictEdit = () => {\n  _s();\n  const [words, setWords] = useState(' ');\n  let Authorization = `Bearer ${localStorage.getItem(\"jwt\")}`;\n  const fetchWords = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.get('https://8080-rohlend1-dictionary-dkorwuew5yo.ws-eu98.gitpod.io/words', {\n        headers: {\n          'Authorization': Authorization\n        }\n      });\n      setWords(response.data);\n      console.log(words);\n    } catch (error) {\n      console.error('Ошибка:', error);\n    }\n  };\n  useEffect(() => {\n    fetchDictionaries();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleSubmit,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), words && words.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dictionary-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dictionary-name\",\n        children: \"Ale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"word-list\",\n        children: words.map(word => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"word-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"word-value\",\n            children: [word.value, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), \" \", word.translate]\n        }, word.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this)\n  // </div>\n  ;\n};\n_s(DictEdit, \"2ceUVYz95SS3s+7AK8NtrWTIe+g=\");\n_c = DictEdit;\nexport default DictEdit;\nvar _c;\n$RefreshReg$(_c, \"DictEdit\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DictEdit","_s","words","setWords","Authorization","localStorage","getItem","fetchWords","event","preventDefault","response","get","headers","data","console","log","error","useEffect","fetchDictionaries","className","children","onClick","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","length","map","word","value","translate","_c","$RefreshReg$"],"sources":["C:/Users/cokol/OneDrive/Рабочий стол/js/slovar/src/components/DictEdit/DictEdit.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './DictEdit.css';\r\nconst DictEdit = () => {\r\n    const [words, setWords] = useState(' ')\r\n    let Authorization = `Bearer ${localStorage.getItem(\"jwt\")}`\r\n    const fetchWords = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.get(\r\n                'https://8080-rohlend1-dictionary-dkorwuew5yo.ws-eu98.gitpod.io/words',{headers:{\r\n                    'Authorization':Authorization\r\n                }\r\n            }\r\n                );\r\n                setWords(response.data)\r\n                console.log(words);\r\n        } catch (error) {\r\n            console.error('Ошибка:', error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchDictionaries();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return (\r\n        <div className=\"create-form\">\r\n        {/* <div className = \"block\">\r\n        <div className = \"title\">Создание словаря</div>\r\n        <div className = \"center-line\">Название:\r\n            <div className = \"input\">\r\n                <input type=\"text\" onChange={(event)=> {setDictname(event.target.value)}}></input>\r\n                </div>\r\n        </div> */}\r\n        <div className=\"line\">\r\n        <button className = \"button\" onClick={handleSubmit} >Создать</button>\r\n        </div>\r\n        {words && words.length > 0 ? (\r\n                <div className=\"dictionary-section\">\r\n                    <h2 className=\"dictionary-name\">Ale</h2>\r\n                    <ul className=\"word-list\">\r\n                        {words.map((word) => (\r\n                            <li key={word.value} className=\"word-item\">\r\n                                <strong className=\"word-value\">{word.value}:</strong> {word.translate}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ) : (\r\n                <p>Загрузка данных...</p>\r\n            )}\r\n    </div>\r\n    // </div>\r\n    );\r\n};\r\n\r\nexport default DictEdit;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}